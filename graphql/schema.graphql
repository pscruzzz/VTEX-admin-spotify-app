type getSpotifyTokenRes{
  didSucceed: Boolean
}

type IGetUserTopArtists{
  items: [ItemArtists]
  total: Int
}

type ItemArtists{
  name: String
  genres: [String]
  external_urls: external_url
  followers: Ifollowers
  images: [IImages]
}

type external_url {
  spotify: String
}

type Ifollowers {
  total: Int
}

type IImages{
  height: Int
  url: String
  width: Int
}

type IGetUserTopTracks{
  items: [ItemTracks]
  total: Int
}

type ItemTracks{
  name: String
  external_urls: external_url
  artists: [IArtist]
  album: IAlbum
}

type IAlbum{
  name: String
  images: [IImages]
}

type IArtist{
  name: String
  external_urls: external_url
}

type Query {
  getSpotifyToken(redirect_uri: String!, code: String!): getSpotifyTokenRes
  getSpotifyRefreshedToken(cookieHasRefreshToken: String!): getSpotifyTokenRes
  getUserTopArtists(time_range: String!): IGetUserTopArtists
  getUserTopTracks(time_range: String!): IGetUserTopTracks
}
